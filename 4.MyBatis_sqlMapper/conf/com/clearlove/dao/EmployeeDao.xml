<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace: 名称空间; 写接口的全类名，相当于告诉MyBatis这个配置文件是实现哪个接口的-->
<mapper namespace="com.clearlove.dao.EmployeeDao">

  <!--public Employee getEmpById(Integer id); 参数类型不用写-->
  <!-- select:用来定义一个查询操作
   id: 方法名 相当于这个配置是对于某个方法的实现
   resultType：指定方法运行后的返回值类型; (查询操作必须指定的)
   #{属性名}: 代表取出传递过来的某个参数的值
    -->
  <!--默认这个查询是不区分环境-->
  <select id="getEmpById" resultType="com.clearlove.bean.Employee">
    <!--sql语句不要写分号-->
    select * from t_employee where id=#{id}
  </select>

<!--  &lt;!&ndash;如果能精确就用精确匹配，不能就用模糊的  &ndash;&gt;-->
<!--  <select id="getEmpById" resultType="com.clearlove.bean.Employee" databaseId="mysql">-->
<!--    &lt;!&ndash;sql语句不要写分号&ndash;&gt;-->
<!--    select * from t_employee where id=#{id}-->
<!--  </select>-->

<!--  <select id="getEmpById" resultType="com.clearlove.bean.Employee" databaseId="oracle">-->
<!--    &lt;!&ndash;sql语句不要写分号&ndash;&gt;-->
<!--    select * from t_employee where id=#{id}-->
<!--  </select>-->


  <!--public int updateEmployee(Employee employee);
    增删改不用写返回值类型，增删改是返回影响多少行
    mybatis自动判断，如果是数字(int, long)
    如果是boolean(影响0行自动封装false，否则true)
    #{属性名}：从传入的参数对象中取出对应属性的值
  -->
  <update id="updateEmployee" >
    update t_employee set empname=#{empName}, gender=#{gender}, email=#{email}
    where id=#{id}
  </update>

  <!--public int deleteEmployee(Integer id); -->
  <delete id="deleteEmployee">
    delete from t_employee where id=#{id}
  </delete>

  <!--public int insertEmployee(Employee employee);-->
  <insert id="insertEmployee">
    insert into t_employee(empname,gender,email) values (#{empName},#{gender},#{email})
  </insert>

</mapper>