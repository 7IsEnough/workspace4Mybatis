<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.clearlove.dao.LockDao">

  <!--public Lock getLockById(Integer id);-->
  <select id="getLockById" resultMap="mylock">
    select l.*,k.id kid, k.keyname, k.lockid from t_lock l
    left join t_key k
    on l.id = k.lockid
    where l.id = #{id}
  </select>


  <!--public Lock getLockByIdSimple(Integer id);-->
  <select id="getLockByIdSimple" resultType="com.clearlove.bean.Lock">
    select * from t_lock where id=#{id}
  </select>


  <!--public Lock getLockByIdByStep(Integer id);-->
  <select id="getLockByIdByStep" resultMap="mylockstep">
    select * from t_lock where id=#{id}
  </select>
  <!--collection分步查询-->
  <resultMap id="mylockstep" type="com.clearlove.bean.Lock">
    <id property="id" column="id"></id>
    <result property="lockName" column="lockName"></result>
    <!--collection指定集合类型的属性封装规则-->
    <collection property="keys" select="com.clearlove.dao.KeyDao.getKeysByLockId" column="id">

    </collection>
  </resultMap>


<!--
  private Integer id;

  private String lockName;

  // 查询锁的时候把所有的钥匙也查出来
  private List<Key> keys;

  -->
  <resultMap id="mylock" type="com.clearlove.bean.Lock">
    <id property="id" column="id"></id>
    <result property="lockName" column="lockName"></result>

    <!--
      collection：定义集合元素的封装
      property:指定哪个属性是集合属性
      javaType:指定对象类型(只在association标签中使用)
      ofType:指定集合里面元素的类型
    -->
    <collection property="keys" ofType="com.clearlove.bean.Key">
      <!--标签体中指定集合中这个元素的封装规则-->
      <id property="id" column="kid"></id>
      <result property="keyName" column="keyname"></result>
    </collection>
  </resultMap>



</mapper>