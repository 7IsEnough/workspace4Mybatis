<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.clearlove.dao.KeyDao">

  <!--public Key getKeyById(Integer id);-->
  <!--
    private Integer id;

    private String keyName;

    private Lock lock;

    id|keyname|lockid|lid|lockName|

    -->
   <select id="getKeyById" resultMap="mykey">
     select k.id,k.keyname, k.lockid, l.id lid, l.lockName from t_key k
     left join t_lock l
     on k.lockid = l.id
     where k.id = #{id}
   </select>

  <!--自定义封装规则: 使用级联属性封装联合查询出的结果-->
<!--  <resultMap id="mykey" type="com.clearlove.bean.Key">-->
<!--    <id property="id" column="id"></id>-->
<!--    <result property="keyName" column="keyname"></result>-->
<!--    <result property="lock.id" column="lid"></result>-->
<!--    <result property="lock.lockName" column="lockName"></result>-->

<!--  </resultMap>-->


  <!--public Key getKeyByIdSimple(Integer id);-->
  <!--查询key的时候也可以带上锁的信息-->
  <!--id keyname lockid-->
  <select id="getKeyByIdSimple" resultMap="mykey02">
    select * from t_key where id=#{id}
  </select>


  <resultMap id="mykey02" type="com.clearlove.bean.Key">
    <id property="id" column="id"></id>
    <result property="keyName" column="keyname"></result>
    <!--告诉Mybatis自己去调用一个查询查锁-->
    <!--select: 指定一个查询sql的唯一标识；mybatis会自动调用指定的sql将查出的Lock封装进来
        需要传参数id
        告诉mybatis把哪一列的值传递过去
        column:指定将哪一列的值传递过去
    -->
    <association property="lock"
      select="com.clearlove.dao.LockDao.getLockByIdSimple"
      column="lockid" fetchType="lazy"
    ></association>
  </resultMap>


  <!--public List<Key> getKeysByLockId(Integer id);
    按照锁的id查找所有钥匙
  -->
  <select id="getKeysByLockId" resultType="com.clearlove.bean.Key">
    select * from t_key where lockid=#{id}
  </select>



  <!--mybatis推荐的    <association property=""></association>-->
  <resultMap id="mykey" type="com.clearlove.bean.Key">
    <id property="id" column="id"></id>
    <result property="keyName" column="keyname"></result>
    <!--接下来的属性是一个对象，自定义这个对象的封装规则；使用association；表示联合了一个对象-->
    <!--javaType="com.clearlove.bean.Lock": 指定写这个属性的类型-->
    <association property="lock" javaType="com.clearlove.bean.Lock">
      <!--定义lock属性对应的这个Lock对象如何封装-->
      <id property="id" column="lid"></id>
      <result property="lockName" column="lockName"></result>
    </association>
  </resultMap>
</mapper>